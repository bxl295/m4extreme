// Hermite.cpp: implementation of the Rule class.
// Copyright (c) 2017-2018 Extreme Computation Technology and Solutions, LLC 
// All rights reserved
// see file License.txt for license details
//////////////////////////////////////////////////////////////////////

#include <cassert>
#include "./Hermite.h"

namespace Element
{
namespace Quadrature
{
namespace Hermite
{
//////////////////////////////////////////////////////////////////////
// Class Rule
//////////////////////////////////////////////////////////////////////

Rule::Rule() {}

Rule::~Rule() {}

Rule::Rule(
	const unsigned int &rhs_n, 
	const unsigned int &rhs_N)
	: n(rhs_n), N(rhs_N) 
{
	assert(n > 0);
}

const vector<Set::VectorSpace::Vector> 
Rule::GetQ()
{
	vector<Set::VectorSpace::Vector> Q;

	if (N == 3)
	{
		switch (n)
		{
			case 6:  Q = Q3_6();  break;
			case 9:  Q = Q3_9();  break;
			case 39: Q = Q3_39(); break;
			default: throw(0);
		}
	}
	else if (N == 5)
	{
		switch (n)
		{
			case 3:  Q = Q5_3(); break;
			case 6:  Q = Q5_6(); break;
			default: throw(0);
		}
	}
	else
	{
		throw(0);
	}

	return Q;
}

const vector<double> 
Rule::GetW()
{
	vector<double> W;

	if (N == 3)
	{
		switch (n)
		{
			case 6:  W = W3_6();  break;
			case 9:  W = W3_9();  break;
			case 39: W = W3_39(); break;
			default: throw(0);
		}
	}
	else if (N == 5)
	{
		switch (n)
		{
			case 3:  W = W5_3(); break;
			case 6:  W = W5_6(); break;
			default: throw(0);
		}
	}
	else
	{
		throw(0);
	}

	return W;
}

const vector<Set::VectorSpace::Vector>
Rule::Q3_6() const
{
	unsigned int NQ = 2*n; // number of quadrature points
	Set::VectorSpace::Vector Q0(n);
	vector<Set::VectorSpace::Vector> Q(NQ,Q0);

	for (unsigned int i=0; i<NQ; i++)
	{
		for (unsigned int j=0; j<n; j++)
		{
			Q[i][j] =  0.0;
		}
	}

	for (unsigned int i=0; i<n; i++)
	{
		Q[i][i]   =  1.732050807568877;
		Q[i+n][i] = -1.732050807568877;
	}

	return Q;
}

const vector<Set::VectorSpace::Vector>
Rule::Q3_9() const
{
	unsigned int NQ = 2*n; // number of quadrature points
	Set::VectorSpace::Vector Q0(n);
	vector<Set::VectorSpace::Vector> Q(NQ,Q0);

	for (unsigned int i=0; i<NQ; i++)
	{
		for (unsigned int j=0; j<n; j++)
		{
			Q[i][j] =  0.0;
		}
	}

	for (unsigned int i=0; i<n; i++)
	{
		Q[i][i]   =  2.121320343559642;
		Q[i+n][i] = -2.121320343559642;
	}

	return Q;
}

const vector<Set::VectorSpace::Vector>
Rule::Q3_39() const
{
	unsigned int NQ = 2*n; // number of quadrature points
	Set::VectorSpace::Vector Q0(n);
	vector<Set::VectorSpace::Vector> Q(NQ,Q0);

	for (unsigned int i=0; i<NQ; i++)
	{
		for (unsigned int j=0; j<n; j++)
		{
			Q[i][j] =  0.0;
		}
	}

	for (unsigned int i=0; i<n; i++)
	{
		Q[i][i]   =  4.415880433163924;
		Q[i+n][i] = -4.415880433163924;
	}

	return Q;
}

const vector<Set::VectorSpace::Vector>
Rule::Q5_3() const
{
	unsigned int NQ = n*n + n + 2; // number of quadrature points
	Set::VectorSpace::Vector Q0(n);
	vector<Set::VectorSpace::Vector> Q(NQ,Q0);

	Q[0][0] =  0.476731294622796;
	Q[0][1] =  0.476731294622796;
	Q[0][2] =  0.476731294622796;

	Q[1][0] = -0.476731294622796;
	Q[1][1] = -0.476731294622796;
	Q[1][2] = -0.476731294622796;

	Q[2][0] =  0.935429018879534;
	Q[2][1] = -0.731237647787132;
	Q[2][2] = -0.731237647787132;

	Q[3][0] = -0.731237647787132;
	Q[3][1] =  0.935429018879534;
	Q[3][2] = -0.731237647787132;

	Q[4][0] = -0.731237647787132;
	Q[4][1] = -0.731237647787132;
	Q[4][2] =  0.935429018879534;

	Q[5][0] = -0.935429018879534;
	Q[5][1] =  0.731237647787132;
	Q[5][2] =  0.731237647787132;

	Q[6][0] =  0.731237647787132;
	Q[6][1] = -0.935429018879534;
	Q[6][2] =  0.731237647787132;

	Q[7][0] =  0.731237647787132;
	Q[7][1] =  0.731237647787132;
	Q[7][2] = -0.935429018879534;

	Q[8][0] =  0.433155309477649;
	Q[8][1] =  0.433155309477649;
	Q[8][2] =  2.66922328697744;

	Q[9][0] =  0.433155309477649;
	Q[9][1] =  2.66922328697744;
	Q[9][2] =  0.433155309477649;

	Q[10][0] =  2.66922328697744;
	Q[10][1] =  0.433155309477649;
	Q[10][2] =  0.433155309477649;

	Q[11][0] = -0.433155309477649;
	Q[11][1] = -0.433155309477649;
	Q[11][2] = -2.66922328697744;

	Q[12][0] = -0.433155309477649;
	Q[12][1] = -2.66922328697744;
	Q[12][2] = -0.433155309477649;

	Q[13][0] = -2.66922328697744;
	Q[13][1] = -0.433155309477649;
	Q[13][2] = -0.433155309477649;

	return Q;
}


const vector<Set::VectorSpace::Vector>
Rule::Q5_6() const
{
	unsigned int NQ = n*n + n + 2; // number of quadrature points
	Set::VectorSpace::Vector Q0(n);
	vector<Set::VectorSpace::Vector> Q(NQ,Q0);

	Q[0][0] =  1.000000000000000;
	Q[0][1] =  1.000000000000000;
	Q[0][2] =  1.000000000000000;     
	Q[0][3] =  1.000000000000000;
	Q[0][4] =  1.000000000000000;
	Q[0][5] =  1.000000000000000;

	Q[1][0] = -1.00000000000000;
	Q[1][1] = -1.00000000000000;
	Q[1][2] = -1.00000000000000;     
	Q[1][3] = -1.00000000000000;
	Q[1][4] = -1.00000000000000;
	Q[1][5] = -1.00000000000000;

	Q[2][0] =  1.414213562373095;
	Q[2][1] =  0.0;
	Q[2][2] =  0.0;     
	Q[2][3] =  0.0;
	Q[2][4] =  0.0;
	Q[2][5] =  0.0;

	Q[3][0] =  0.0;
	Q[3][1] =  1.414213562373095;
	Q[3][2] =  0.0;     
	Q[3][3] =  0.0;
	Q[3][4] =  0.0;
	Q[3][5] =  0.0;

	Q[4][0] =  0.0;
	Q[4][1] =  0.0;
	Q[4][2] =  1.414213562373095;     
	Q[4][3] =  0.0;
	Q[4][4] =  0.0;
	Q[4][5] =  0.0;

	Q[5][0] =  0.0;
	Q[5][1] =  0.0;
	Q[5][2] =  0.0;     
	Q[5][3] =  1.414213562373095;
	Q[5][4] =  0.0;
	Q[5][5] =  0.0;

	Q[6][0] =  0.0;
	Q[6][1] =  0.0;
	Q[6][2] =  0.0;     
	Q[6][3] =  0.0;
	Q[6][4] =  1.414213562373095;
	Q[6][5] =  0.0;

	Q[7][0] =  0.0;
	Q[7][1] =  0.0;
	Q[7][2] =  0.0;     
	Q[7][3] =  0.0;
	Q[7][4] =  0.0;
	Q[7][5] =  1.414213562373095;

	Q[8][0] = -1.414213562373095;
	Q[8][1] =  0.0;
	Q[8][2] =  0.0;     
	Q[8][3] =  0.0;
	Q[8][4] =  0.0;
	Q[8][5] =  0.0;

	Q[9][0] =  0.0;
	Q[9][1] = -1.414213562373095;
	Q[9][2] =  0.0;     
	Q[9][3] =  0.0;
	Q[9][4] =  0.0;
	Q[9][5] =  0.0;

	Q[10][0] =  0.0;
	Q[10][1] =  0.0;
	Q[10][2] = -1.414213562373095;     
	Q[10][3] =  0.0;
	Q[10][4] =  0.0;
	Q[10][5] =  0.0;

	Q[11][0] =  0.0;
	Q[11][1] =  0.0;
	Q[11][2] =  0.0;     
	Q[11][3] = -1.414213562373095;
	Q[11][4] =  0.0;
	Q[11][5] =  0.0;

	Q[12][0] =  0.0;
	Q[12][1] =  0.0;
	Q[12][2] =  0.0;     
	Q[12][3] =  0.0;
	Q[12][4] = -1.414213562373095;
	Q[12][5] =  0.0;

	Q[13][0] =  0.0;
	Q[13][1] =  0.0;
	Q[13][2] =  0.0;     
	Q[13][3] =  0.0;
	Q[13][4] =  0.0;
	Q[13][5] = -1.414213562373095;

	Q[14][0] = -1.000000000000000;
	Q[14][1] = -1.000000000000000;
	Q[14][2] =  1.000000000000000;     
	Q[14][3] =  1.000000000000000;
	Q[14][4] =  1.000000000000000;
	Q[14][5] =  1.000000000000000;

	Q[15][0] = -1.000000000000000;
	Q[15][1] =  1.000000000000000;
	Q[15][2] = -1.000000000000000;     
	Q[15][3] =  1.000000000000000;
	Q[15][4] =  1.000000000000000;
	Q[15][5] =  1.000000000000000;

	Q[16][0] = -1.000000000000000;
	Q[16][1] =  1.000000000000000;
	Q[16][2] =  1.000000000000000;     
	Q[16][3] = -1.000000000000000;
	Q[16][4] =  1.000000000000000;
	Q[16][5] =  1.000000000000000;

	Q[17][0] = -1.000000000000000;
	Q[17][1] =  1.000000000000000;
	Q[17][2] =  1.000000000000000;     
	Q[17][3] =  1.000000000000000;
	Q[17][4] = -1.000000000000000;
	Q[17][5] =  1.000000000000000;

	Q[18][0] = -1.000000000000000;
	Q[18][1] =  1.000000000000000;
	Q[18][2] =  1.000000000000000;     
	Q[18][3] =  1.000000000000000;
	Q[18][4] =  1.000000000000000;
	Q[18][5] = -1.000000000000000;

	Q[19][0] =  1.000000000000000;
	Q[19][1] = -1.000000000000000;
	Q[19][2] = -1.000000000000000;     
	Q[19][3] =  1.000000000000000;
	Q[19][4] =  1.000000000000000;
	Q[19][5] =  1.000000000000000;

	Q[20][0] =  1.000000000000000;
	Q[20][1] = -1.000000000000000;
	Q[20][2] =  1.000000000000000;     
	Q[20][3] = -1.000000000000000;
	Q[20][4] =  1.000000000000000;
	Q[20][5] =  1.000000000000000;

	Q[21][0] =  1.000000000000000;
	Q[21][1] = -1.000000000000000;
	Q[21][2] =  1.000000000000000;     
	Q[21][3] =  1.000000000000000;
	Q[21][4] = -1.000000000000000;
	Q[21][5] =  1.000000000000000;

	Q[22][0] =  1.000000000000000;
	Q[22][1] = -1.000000000000000;
	Q[22][2] =  1.000000000000000;     
	Q[22][3] =  1.000000000000000;
	Q[22][4] =  1.000000000000000;
	Q[22][5] = -1.000000000000000;

	Q[23][0] =  1.000000000000000;
	Q[23][1] =  1.000000000000000;
	Q[23][2] = -1.000000000000000;     
	Q[23][3] = -1.000000000000000;
	Q[23][4] =  1.000000000000000;
	Q[23][5] =  1.000000000000000;

	Q[24][0] =  1.000000000000000;
	Q[24][1] =  1.000000000000000;
	Q[24][2] = -1.000000000000000;     
	Q[24][3] =  1.000000000000000;
	Q[24][4] = -1.000000000000000;
	Q[24][5] =  1.000000000000000;

	Q[25][0] =  1.000000000000000;
	Q[25][1] =  1.000000000000000;
	Q[25][2] = -1.000000000000000;     
	Q[25][3] =  1.000000000000000;
	Q[25][4] =  1.000000000000000;
	Q[25][5] = -1.000000000000000;

	Q[26][0] =  1.000000000000000;
	Q[26][1] =  1.000000000000000;
	Q[26][2] =  1.000000000000000;     
	Q[26][3] = -1.000000000000000;
	Q[26][4] = -1.000000000000000;
	Q[26][5] =  1.000000000000000;

	Q[27][0] =  1.000000000000000;
	Q[27][1] =  1.000000000000000;
	Q[27][2] =  1.000000000000000;     
	Q[27][3] = -1.000000000000000;
	Q[27][4] =  1.000000000000000;
	Q[27][5] = -1.000000000000000;

	Q[28][0] =  1.000000000000000;
	Q[28][1] =  1.000000000000000;
	Q[28][2] =  1.000000000000000;     
	Q[28][3] =  1.000000000000000;
	Q[28][4] = -1.000000000000000;
	Q[28][5] = -1.000000000000000;

	Q[29][0] =  1.000000000000000;
	Q[29][1] =  1.000000000000000;
	Q[29][2] = -1.000000000000000;     
	Q[29][3] = -1.000000000000000;
	Q[29][4] = -1.000000000000000;
	Q[29][5] = -1.000000000000000;

	Q[30][0] =  1.000000000000000;
	Q[30][1] = -1.000000000000000;
	Q[30][2] =  1.000000000000000;     
	Q[30][3] = -1.000000000000000;
	Q[30][4] = -1.000000000000000;
	Q[30][5] = -1.000000000000000;

	Q[31][0] =  1.000000000000000;
	Q[31][1] = -1.000000000000000;
	Q[31][2] = -1.000000000000000;     
	Q[31][3] =  1.000000000000000;
	Q[31][4] = -1.000000000000000;
	Q[31][5] = -1.000000000000000;

	Q[32][0] =  1.000000000000000;
	Q[32][1] = -1.000000000000000;
	Q[32][2] = -1.000000000000000;     
	Q[32][3] = -1.000000000000000;
	Q[32][4] =  1.000000000000000;
	Q[32][5] = -1.000000000000000;

	Q[33][0] =  1.000000000000000;
	Q[33][1] = -1.000000000000000;
	Q[33][2] = -1.000000000000000;     
	Q[33][3] = -1.000000000000000;
	Q[33][4] = -1.000000000000000;
	Q[33][5] =  1.000000000000000;

	Q[34][0] = -1.000000000000000;
	Q[34][1] =  1.000000000000000;
	Q[34][2] =  1.000000000000000;     
	Q[34][3] = -1.000000000000000;
	Q[34][4] = -1.000000000000000;
	Q[34][5] = -1.000000000000000;

	Q[35][0] = -1.000000000000000;
	Q[35][1] =  1.000000000000000;
	Q[35][2] = -1.000000000000000;     
	Q[35][3] =  1.000000000000000;
	Q[35][4] = -1.000000000000000;
	Q[35][5] = -1.000000000000000;

	Q[36][0] = -1.000000000000000;
	Q[36][1] =  1.000000000000000;
	Q[36][2] = -1.000000000000000;     
	Q[36][3] = -1.000000000000000;
	Q[36][4] =  1.000000000000000;
	Q[36][5] = -1.000000000000000;

	Q[37][0] = -1.000000000000000;
	Q[37][1] =  1.000000000000000;
	Q[37][2] = -1.000000000000000;     
	Q[37][3] = -1.000000000000000;
	Q[37][4] = -1.000000000000000;
	Q[37][5] =  1.000000000000000;

	Q[38][0] = -1.000000000000000;
	Q[38][1] = -1.000000000000000;
	Q[38][2] =  1.000000000000000;     
	Q[38][3] =  1.000000000000000;
	Q[38][4] = -1.000000000000000;
	Q[38][5] = -1.000000000000000;

	Q[39][0] = -1.000000000000000;
	Q[39][1] = -1.000000000000000;
	Q[39][2] =  1.000000000000000;     
	Q[39][3] = -1.000000000000000;
	Q[39][4] =  1.000000000000000;
	Q[39][5] = -1.000000000000000;

	Q[40][0] = -1.000000000000000;
	Q[40][1] = -1.000000000000000;
	Q[40][2] =  1.000000000000000;     
	Q[40][3] = -1.000000000000000;
	Q[40][4] = -1.000000000000000;
	Q[40][5] =  1.000000000000000;

	Q[41][0] = -1.000000000000000;
	Q[41][1] = -1.000000000000000;
	Q[41][2] = -1.000000000000000;     
	Q[41][3] =  1.000000000000000;
	Q[41][4] =  1.000000000000000;
	Q[41][5] = -1.000000000000000;

	Q[42][0] = -1.000000000000000;
	Q[42][1] = -1.000000000000000;
	Q[42][2] = -1.000000000000000;     
	Q[42][3] =  1.000000000000000;
	Q[42][4] = -1.000000000000000;
	Q[42][5] =  1.000000000000000;

	Q[43][0] = -1.000000000000000;
	Q[43][1] = -1.000000000000000;
	Q[43][2] = -1.000000000000000;     
	Q[43][3] = -1.000000000000000;
	Q[43][4] =  1.000000000000000;
	Q[43][5] =  1.000000000000000;

	return Q;
}


const vector<double>
Rule::W3_6() const
{
	unsigned int NQ = 2*n; // number of quadrature points
	vector<double> W(NQ);

	for (unsigned int i=0; i<NQ; i++)
	{	
		W[i] = 2.583856390024985;
	}

	return W;
}


const vector<double>
Rule::W3_9() const
{
	unsigned int NQ = 2*n; // number of quadrature points
	vector<double> W(NQ);

	for (unsigned int i=0; i<NQ; i++)
	{	
		W[i] = 9.591839917579087;
	}

	return W;
}


const vector<double>
Rule::W3_39() const
{
	unsigned int NQ = 2*n; // number of quadrature points
	vector<double> W(NQ);

	for (unsigned int i=0; i<NQ; i++)
	{	
		W[i] = 63434849.64761166;
	}

	return W;
}


const vector<double>
Rule::W5_3() const
{
	unsigned int NQ = n*n + n + 2; // number of quadrature points
	vector<double> W(NQ);

	W[0] = 1.347535375233273;
	W[1] = 1.347535375233273;

	for (unsigned int i=2; i<8; i++)
	{	
		W[i] = 0.451034567743368;
	}

	for (unsigned int i=8; i<NQ; i++)
	{	
		W[i] = 0.027841639984159;
	}

	return W;
}


const vector<double>
Rule::W5_6() const
{
	unsigned int NQ = n*n + n + 2; // number of quadrature points
	vector<double> W(NQ);

	W[0] = 0.242236536564842;
	W[1] = 0.242236536564842;

	for (unsigned int i=2; i<14; i++)
	{	
		W[i] = 1.937892292518739;
	}

	for (unsigned int i=14; i<NQ; i++)
	{	
		W[i] = 0.242236536564842;
	}

	return W;
}

}

}

}
